/*
2 - Write an algorithm (Vehicles.java) that, from reading and storing in vectors the commercial value of 20 vehicles and the type (family (1), public transportation (2), load (3)), 
calculate the value based on:
• For vehicles with a value greater than 100 million, charge VAT of 20%, for others VAT is 16%
• For vehicles type 1, with value up to 50 million, apply a discount equivalent to 50% of the VAT charged
• For vehicles type 2 and 3, with a value higher than 80 million, apply an additional cost of 5%
• For all vehicles, if the final value is less than 80 million, apply an additional discount of 5% of the commercial value

File: Vehicles.java
Date: March 3, 2019
Author: Victor
*/
package test;

import java.util.Scanner;

public class Vehicles{	
	private static final int MAX_VEHICLES = 2;
	private static final int VEHICLES_TYPE_FAMILY = 1;
	private static final int VEHICLES_TYPE_PUBLIC_TRANSPORTATION = 2;
	private static final int VEHICLES_TYPE_LOAD = 3;
	
	// Vehicles with a value greater than 100 million is luxury car
	private static final int LUXURY_VEHICLE_VALUE = 100;
	
	// Charge VAT of 20%, for others VAT is 16%
	private static final double REGULAR_VEHICLE_VAT = 0.16;
	private static final double LUXURY_VEHICLE_VAT = 0.2;
	
	// Vehicles with type family (1) a value less than 50 million is economic car
	private static final int ECO_TYPE1_VALUE = 50;
	private static final double VAT_DISCOUNT_ECO_TYPE1 = 0.5;
	
	// Vehicles with type public transportation (2) and load (3) a value higher than 80 million is business car
	private static final int BUSINESS_TYPE23_VALUE = 80;
	private static final double COST_ADDITIONAL_TYPE23 = 0.05;
	
	// Discount commercial value for all car has total value less then 80
	private static final int TOTAL_COST_DISCOUNT_VALUE = 80;
	private static final double TOTAL_DISCOUNT = 0.05;
	
	int typeVehicle;
	double valueVehicle;
	double vatBase;
	double vatDiscount;
	double costAdded;
	double commercialDiscount;
	
	public void inputVehicle(){
		Scanner scanner = new Scanner(System.in);		
		System.out.print("Enter value of vehicle: ");		
		valueVehicle=scanner.nextDouble();			
		System.out.print("Enter type of vehicle: ");
		typeVehicle=scanner.nextInt();
		//scanner.close();
	}
			
	//For vehicles with a value greater than 100 million, charge VAT of 20%, for others VAT is 16%
	public void calculateVatByValue(){							
		if (valueVehicle>LUXURY_VEHICLE_VALUE) {
			vatBase = valueVehicle*LUXURY_VEHICLE_VAT;
		}else {
			vatBase = valueVehicle*REGULAR_VEHICLE_VAT;
		}	
	}
	
	// For vehicles type 1, with value up to 50 million, apply a discount equivalent to 50% of the VAT charged
	// For vehicles type 2 and 3, with a value higher than 80 million, apply an additional cost of 5%
	public void calculateVatByType(){													
		switch(typeVehicle) {
			case VEHICLES_TYPE_FAMILY:
				if (valueVehicle<=ECO_TYPE1_VALUE) {
					vatDiscount = vatBase*VAT_DISCOUNT_ECO_TYPE1;
				}
				break;
			case VEHICLES_TYPE_PUBLIC_TRANSPORTATION:
			case VEHICLES_TYPE_LOAD:
				if (valueVehicle>=BUSINESS_TYPE23_VALUE) {
					costAdded = valueVehicle*COST_ADDITIONAL_TYPE23;
				}
				break;				
		} 
	}
	
	//// For all vehicles, if the final value is less than 80 million, apply an additional discount of 5% of the commercial value
	public void calculateCommercialDiscount(){							
		double vehicleTotalCost = 0;
								
		vehicleTotalCost = valueVehicle + vatBase - vatDiscount + costAdded;
		if(vehicleTotalCost>=TOTAL_COST_DISCOUNT_VALUE) {
			commercialDiscount = vehicleTotalCost*TOTAL_DISCOUNT;
		}
	}
	
	public double calculateVehicleCost(){
		double vehicleCost=0;
		
		// Apply VAT by value of vehicles
		calculateVatByValue();
		
		//Apply VAT discount for type vehicles
		calculateVatByType();
		
		//Apply VAT discount for commercial vehicles
		calculateCommercialDiscount();
		
		vehicleCost = valueVehicle + vatBase + costAdded - (vatDiscount + commercialDiscount);
		return vehicleCost;
	}
	
	public void displayVehicle(){					
		String strVehicleType="";
		double vehicleCost = calculateVehicleCost();
		
		System.out.printf("\n %10.2f",valueVehicle);					
		switch (typeVehicle){
			case 1: 
				strVehicleType = "Family";
				break;
			case 2: 
				strVehicleType = "Public transportation";
				break;
			case 3: 
				strVehicleType = "Load";
				break;
		}
		
		System.out.printf("%25s", strVehicleType);
		System.out.printf("%10.2f",vatBase);
		System.out.printf("%15.2f",vatDiscount);
		System.out.printf("%10.2f",costAdded);
		System.out.printf("%20.2f",commercialDiscount);
		System.out.printf("%15.2f",vehicleCost);
	}
	
	public static void main(String[] args){
		Vehicles[] arrayVehicles = new Vehicles[MAX_VEHICLES];		
		for (int i=0;i<MAX_VEHICLES;i++){			
			arrayVehicles[i] = new Vehicles();
			arrayVehicles[i].inputVehicle();
		}
		System.out.println("-----------------------------------------------------------------------------------------------------------------");
	    System.out.printf("%10s %25s %10s %15s %10s %20s %15s", "Value", "Type", "VAT", "VAT_Discount", "Cost_Added","Commercial_Discount","Total_Cost");
	    System.out.println();		
		for (int i=0;i<MAX_VEHICLES;i++){			
			arrayVehicles[i].displayVehicle();
		}
	}
}
